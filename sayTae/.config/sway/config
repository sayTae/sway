# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

font pango: SourceCodePro Medium 11

# display gap
gaps inner 10px
gaps outer 0px

# Set workspace
set $workspace1 "一"
set $workspace2 "二"
set $workspace3 "三"
set $workspace4 "四"
set $workspace5 "五"
set $workspace6 "六"
set $workspace7 "七"
set $workspace8 "八"
set $workspace9 "九"

### Input configuration
output eDP-1 disable
workspace $workspace1 output HDMI-A-1
workspace $workspace2 output HDMI-A-1
workspace $workspace3 output HDMI-A-1
workspace $workspace4 output HDMI-A-1

# input delay
input * repeat_delay 180
input * repeat_rate 50

# swap caps:ctrl
input "type:keyboard" xkb_options ctrl:swapcaps

# mouse pointer
input "typepointer" accel_profile flat

### Variables

# Logo key. Use Mod1 for Alt.
set $mod Mod1

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened

# fcitx5
exec --no-startup-id fcitx5 -d

# terminal emulator
set $term foot

# Application munu
set $menu wofi --show

# Take a screenshot (drag)
set $screenshot grim -g "$(slurp)" - | swappy -f -
# set $screenshot grim -g "$(slurp)" - | wl-copy 

# Screen lock (waylock)
set $screenlock swaylock --color 000000

### Floating App
# mpv
for_window [app_id="mpv"] floating enable
# imv
for_window [app_id="imv"] floating enable
# fcitx5
for_window [app_id="org.fcitx.fcitx5-config-qt"] floating enable
# pulseaudio
for_window [app_id="org.pulseaudio.pavucontrol"] floating enable
# blueman
for_window [app_id="blueman-manager"] floating enable
# anki
for_window [app_id="anki"] floating enable

### Output configuration
#
# focused
# client.focused #285577 #285577 #ffffff #4A773C
# client.unfocused #3C3C3C #3C3C3C #ffffff #285577

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/downloads/sunflower.jpg fill
# output * bg "#2F4F4F" solid_color
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

	# Take a screen
	bindsym $mod+Shift+s exec $screenshot 

	# Screen locked
	bindsym $mod+backslash exec $screenlock

	# Set volume
	bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +4%
	bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -4%
	bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

	# Start sceen lock
	# bindsym $mod+m swaylock --color 000000

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#


	# Switch to workspace
	bindsym $mod+1 workspace $workspace1
	bindsym $mod+2 workspace $workspace2
	bindsym $mod+3 workspace $workspace3
	bindsym $mod+4 workspace $workspace4
	bindsym $mod+5 workspace $workspace5
	bindsym $mod+6 workspace $workspace6
	bindsym $mod+7 workspace $workspace7
	bindsym $mod+8 workspace $workspace8
	bindsym $mod+9 workspace $workspace9

	# Move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace $workspace1
	bindsym $mod+Shift+2 move container to workspace $workspace2
	bindsym $mod+Shift+3 move container to workspace $workspace3
	bindsym $mod+Shift+4 move container to workspace $workspace4
	bindsym $mod+Shift+5 move container to workspace $workspace5
	bindsym $mod+Shift+6 move container to workspace $workspace6
	bindsym $mod+Shift+7 move container to workspace $workspace7
	bindsym $mod+Shift+8 move container to workspace $workspace8
	bindsym $mod+Shift+9 move container to workspace $workspace9

    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
	swaybar_command waybar
}

# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %X'; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

include /etc/sway/config.d/*
